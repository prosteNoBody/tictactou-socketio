{"version":3,"sources":["components/LoginForm.js","components/LoadingIcon.js","components/GameManager.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","StyledInput","input","SubmitButton","JoinButton","LoginForm","props","createGame","joinGame","useState","username","setUsername","gameId","setGameId","useEffect","unmounted","axios","get","then","data","placeholder","type","value","onChange","e","target","onClick","LoadingIcon","LoadingContainer","UserProfile","gridArea","isOnline","PlayerTurn","mainPlayerTurn","GameContainer","GameBlock","win","lose","effect","css","CopyLink","LeaveButton","GameManager","leaveGame","kickFromSocket","players","defaultGameState","state","turn","name","main","gameData","setGameData","winCondition","setWinCondition","winner","setWinner","playMove","setPlayMove","socket","io","on","newGameState","console","log","winPosition","slice","x","y","emit","window","history","pushState","find","player","createSymbol","symbolCode","aria-hidden","className","gameBlocks","blockId","isWinPosition","i","length","push","key","gameState","createGameStateLayout","CenterWrapper","App","existingGame","setExistingGame","contentReady","setContentReady","post","error","gameid","catch","Helmet","src","crossOrigin","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6f600fa2.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  padding: 2rem;\r\n  \r\n  border: 2px solid black;\r\n  background: whitesmoke;\r\n  filter: drop-shadow(0 0 0.75rem black);\r\n`;\r\nconst StyledInput = styled.input`\r\n  margin: 1rem;\r\n  \r\n  height: 2rem;\r\n  \r\n  text-align: center;\r\n`;\r\nconst SubmitButton = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  height: 5rem;\r\n  margin: 1rem;\r\n  \r\n  color: white;\r\n  background: orange;\r\n  border: 2px solid grey;\r\n  \r\n  font-weight: bold;\r\n  \r\n  user-select: none;\r\n  transition: 100ms;\r\n  cursor: pointer;\r\n  \r\n  &:hover{\r\n    background: darkorange;\r\n  }\r\n`;\r\nconst JoinButton = styled(SubmitButton)`\r\n  background: deepskyblue;\r\n  \r\n  &:hover{\r\n    background: dodgerblue;\r\n  }\r\n`;\r\n\r\nconst LoginForm = (props) => {\r\n    const {createGame, joinGame} = props;\r\n    const [username, setUsername] = useState(\"\");\r\n    const [gameId, setGameId] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        axios.get('http://localhost:5000/api/username')\r\n            .then(({data}) => {\r\n                  if(!unmounted){\r\n                        setUsername(data.username || \"\");\r\n                  }\r\n            });\r\n        return () => {\r\n            unmounted = true\r\n        }\r\n    },[]);\r\n\r\n    const changeUsernameValue = e => {\r\n        setUsername(e.target.value);\r\n    };\r\n\r\n    const changeGameIdValue = e => {\r\n        setGameId(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <StyledInput placeholder=\"username\" type=\"username\" value={username} onChange={changeUsernameValue}/>\r\n            <StyledInput placeholder=\"gameid\" type=\"gameId\" value={gameId} onChange={changeGameIdValue}/>\r\n            <SubmitButton onClick={() => createGame(username)}>CreateGame</SubmitButton>\r\n            <JoinButton onClick={() => joinGame(username, gameId)}>JoinGame</JoinButton>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default LoginForm;","import styled from \"styled-components\";\r\n\r\nconst LoadingIcon = styled.div`\r\n  width: 4em;\r\n  height: 4em;\r\n  margin: 1rem;\r\n  border-radius: 50%;\r\n  \r\n  border: 3px solid grey;\r\n  border-left: 3px solid lightgrey;\r\n  \r\n  animation: rotating 1s infinite;\r\n  animation-timing-function: ease-in-out;\r\n  @keyframes rotating{\r\n    0%{\r\n      transform: rotate(0deg);\r\n    }\r\n    100%{\r\n      transform: rotate(360deg);\r\n    }\r\n  } \r\n`;\r\n\r\nexport default LoadingIcon;","import React, {useEffect, useState} from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport io from 'socket.io-client';\r\n\r\nimport LoadingIcon from './LoadingIcon';\r\n\r\nconst SOCKET_ENDPOINT = \"http://localhost:5000\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 10rem 5rem 10rem;\r\n  grid-template-rows: 6rem 25rem 4rem 4rem;\r\n  grid-template-areas: \r\n  \"profile1 playerTurn profile2\"\r\n  \"game game game\"\r\n  \"link link link\"\r\n  \"leave leave leave\";\r\n  \r\n  border-radius: 10px;\r\n  \r\n  border: 6px solid lightskyblue;\r\n  background: white;\r\n  \r\n  filter: drop-shadow(0 0 0.5rem lightskyblue);\r\n`;\r\nconst LoadingContainer = styled.div`\r\n  grid-area: game;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst UserProfile = styled.div`\r\n  grid-area: ${props => props.gridArea};\r\n  \r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  \r\n  margin: 1rem;\r\n  \r\n  border: 1px solid grey;\r\n  color: black;\r\n  background: ${props => props.isOnline ? \"whitesmoke\" : \"red\"};\r\n  \r\n  text-align: center;\r\n  \r\n  transition: 100ms;\r\n`;\r\nconst PlayerTurn = styled.div`\r\n  grid-area: playerTurn;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n  color: black;\r\n  \r\n  font-size: 2rem;\r\n  \r\n  transform: rotate(${props => props.mainPlayerTurn ? 0 : 180}deg);\r\n  transition: 200ms;\r\n`;\r\nconst GameContainer = styled.div`\r\n  grid-area: game;\r\n  display: grid;\r\n  grid-template-columns: repeat(3,1fr);\r\n  grid-template-rows: repeat(3,1fr);\r\n  grid-template-areas: \r\n  \"i00 i01 i02\"\r\n  \"i10 i11 i12\"\r\n  \"i20 i21 i22\";\r\n  \r\n  margin: 0 .8rem;\r\n`;\r\nconst GameBlock = styled.div`\r\n  grid-area: ${props => props.gridArea};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n  margin: 0.2rem;\r\n  padding: 0.5rem;\r\n  border-radius: 15px;\r\n  \r\n  color: black;\r\n  background: ${props => props.win ? 'green' : (props.lose ? 'red' : 'grey')};\r\n  \r\n  font-size: 20px;\r\n  \r\n  transition: 100ms;\r\n  & i{\r\n    font-size: 5rem;\r\n  }\r\n  ${({effect}) => effect && css`\r\n      background: lightgrey;\r\n      \r\n      cursor: pointer;\r\n      &:hover{\r\n        border: 6px solid #595959;\r\n      }\r\n      &:active{\r\n        background: grey;\r\n      }\r\n`}\r\n`;\r\n\r\nconst CopyLink = styled.div`\r\n  grid-area: link;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n  margin: 1rem 1rem 0 1rem;\r\n  \r\n  color: white;\r\n  background: black;\r\n  \r\n  user-select: all;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst LeaveButton = styled.div`\r\n  grid-area: leave;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n  margin: 1rem;\r\n\r\n  color: white;\r\n  background: indianred;\r\n  border: 1px solid darkred;\r\n  \r\n  cursor: pointer;\r\n  transition: 100ms;\r\n  \r\n  &:hover{\r\n    background: darkred;\r\n  }\r\n`;\r\n\r\nconst GameManager = (props) => {\r\n    let {gameId, leaveGame, kickFromSocket} = props;\r\n    let players = [];\r\n    const defaultGameState = {state: 0, turn:1 , players:[{name:\"Loading...\",isOnline: true, main:true, turn: 1}, {name:\"Loading...\",isOnline: true, main:false, turn: 2}]};\r\n    const [gameData, setGameData] = useState(defaultGameState);\r\n    const [winCondition, setWinCondition] = useState([]);\r\n    const [winner, setWinner] = useState(0);\r\n    const [playMove, setPlayMove] = useState(() => () => {});\r\n    useEffect(() => {\r\n            const socket = io(SOCKET_ENDPOINT);\r\n            socket.on('disconnect', () => {\r\n                setGameData(defaultGameState);\r\n                kickFromSocket();\r\n            });\r\n            socket.on('gameUpdate', newGameState => {\r\n                console.log(\"new data arrived\");\r\n                console.log(newGameState);\r\n                setGameData(newGameState);\r\n            });\r\n            socket.on('winCondition', winPosition => {\r\n                console.log(winPosition);\r\n                 setWinCondition(winPosition.slice(1));\r\n                 setWinner(winPosition[0]);\r\n            });\r\n            setPlayMove(() => (x,y) => {socket.emit('playerMove',{x:x,y:y})});\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        window.history.pushState({},\"Game\",\"game/\" + gameId);\r\n    },[gameId]);\r\n\r\n    players[0] = gameData.players.find(player => player.main) || {name:\"Error\",isOnline:false,main:true,turn:1};\r\n    players[1] = gameData.players.find(player => !player.main) || {name:\"Error\",isOnline:false,main:false,turn:2};\r\n\r\n    const createSymbol = (symbolCode) => {\r\n        switch (symbolCode) {\r\n            case 1:\r\n                return <i aria-hidden className=\"far fa-circle\"/>;\r\n            case 2:\r\n                return <i aria-hidden className=\"fas fa-times\"/>;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const createGameStateLayout = () => {\r\n        if(gameData.state === 0)\r\n            return (\r\n                <LoadingContainer>\r\n                    <LoadingIcon/>\r\n                </LoadingContainer>\r\n            );\r\n        let gameBlocks = [];\r\n        for(let x = 0;x < 3;x++){\r\n            for(let y = 0;y < 3;y++){\r\n                let blockId = \"i\" + x + y;\r\n                let isWinPosition = false;\r\n                for(let i = 0; i < winCondition.length; i++)\r\n                    if(winCondition[i][0] === x && winCondition[i][1] === y)\r\n                        isWinPosition = true;\r\n                gameBlocks.push(<GameBlock effect={gameData.state === 1 && gameData.turn === players[0].turn} win={players[0].turn === winner && isWinPosition} lose={players[1].turn === winner && isWinPosition} key={blockId} gridArea={blockId} onClick={() => {playMove(x,y)}}>{gameData.gameState ? createSymbol(gameData.gameState[x][y]) : null}</GameBlock>);\r\n            }\r\n        }\r\n        return (\r\n            <GameContainer>\r\n                {gameBlocks}\r\n            </GameContainer>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <PlayerTurn mainPlayerTurn={(players[0].turn === gameData.turn)}>\r\n                <i aria-hidden className=\"fas fa-chevron-left\"/>\r\n            </PlayerTurn>\r\n\r\n            <UserProfile isOnline={players[0].isOnline} gridArea=\"profile1\">\r\n                <div>{players[0].name}</div>\r\n                <div>{createSymbol(players[0].turn)}</div>\r\n            </UserProfile>\r\n\r\n            <UserProfile isOnline={players[1].isOnline} gridArea=\"profile2\">\r\n                <div>{players[1].name}</div>\r\n                <div>{createSymbol(players[1].turn)}</div>\r\n            </UserProfile>\r\n\r\n            {createGameStateLayout()}\r\n\r\n            <CopyLink>{gameId}</CopyLink>\r\n            <LeaveButton onClick={() => leaveGame()}>LEAVE GAME</LeaveButton>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default GameManager;\r\n","import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport {Helmet} from 'react-helmet';\n\nimport LoginForm from './components/LoginForm';\nimport GameManager from './components/GameManager';\nimport LoadingIcon from './components/LoadingIcon';\n\nconst CenterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  height: 100vh;\n  width: 100vw;\n`;\n\nconst App = () => {\n    const [existingGame, setExistingGame] = useState(false);\n    const [gameId, setGameId] = useState(\"\");\n    const [contentReady,setContentReady] = useState(false);\n\n    useEffect(() => {\n        let unmounted = false;\n\n        axios.post('http://localhost:5000/api/rejoin')\n            .then(({data}) => {\n                if(unmounted)\n                    return;\n                setContentReady(true);\n                if(data.error)\n                    return;\n                setGameId(data.gameid);\n                setExistingGame(true);\n            })\n            .catch(() => {\n                if(unmounted)\n                    return;\n                setContentReady(true);\n            });\n\n        return () => {\n            unmounted = true\n        }\n    },[]);\n\n    const kickFromSocket = () => {\n        setExistingGame(false);\n    };\n\n    const createGame = (username) => {\n        axios.post('http://localhost:5000/api/create',{\n            username: username\n        })\n            .then(({data}) => {\n                if(data.error)\n                    return console.log(data.error);\n                setGameId(data.gameid);\n                setExistingGame(true);\n            });\n    };\n\n    const joinGame = (username, gameId) => {\n        axios.post('http://localhost:5000/api/join',{\n            username: username,\n            gameid: gameId\n        })\n            .then(({data}) => {\n                if(data.error)\n                    return console.log(data.error);\n                setGameId(data.gameid);\n                setExistingGame(true);\n            });\n    };\n\n    const leaveGame = () => {\n        axios.post('/api/leave')\n            .then(({data}) => {\n                if(data.error)\n                    return console.log(data.error);\n                window.history.pushState({},\"\",\"/\");\n                setExistingGame(false);\n                setGameId(\"\");\n            });\n    };\n\n    return (\n        <CenterWrapper>\n            <Helmet>\n                <script src=\"https://kit.fontawesome.com/93e85ab53d.js\" crossOrigin=\"anonymous\"/>\n            </Helmet>\n            {existingGame ? <GameManager kickFromSocket={kickFromSocket} leaveGame={leaveGame} gameId={gameId}/> : (contentReady ? <LoginForm createGame={createGame} joinGame={joinGame}/> : <LoadingIcon/>)}\n        </CenterWrapper>\n    );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}